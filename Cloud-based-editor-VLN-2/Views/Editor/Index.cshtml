@model Cloud_based_editor_VLN_2.Models.ViewModels.DocumentViewModel

@{ 
    ViewBag.DocumentID = Model.Doc.ID;
}
<script type="text/javascript">
    bodyMargin();
    var documentID = @ViewBag.documentID;
</script>



<div class="navToggle"> <div class="verticalText" id="verticalTextID" onclick="showNavBar();">Navigation</div> </div>
<nav class="projectNav" id="sideNav">
    <ul>
    @foreach (Cloud_based_editor_VLN_2.Models.Entities.Document item in Model.Documents) {
        if (item.ID == Model.Doc.ID) {
            <li>@Html.Raw("<div class=\"navigationLink selectedNav\" id=\"nav" + item.ID + "\" onclick=\"showHeader(this.id);\" >" + item.Name + item.Type + "</div>")</li>
        }
        else {
            <li>@Html.Raw("<div class=\"navigationLink\" id=\"nav" + item.ID + "\" onclick=\"showHeader(this.id);\" >" + item.Name + item.Type + "</div>")</li>
        }
    }
    </ul>
</nav>
<div id="editorHeaderContainer">
    @foreach (Cloud_based_editor_VLN_2.Models.Entities.Document item in Model.Documents) {

        if (item.ID == Model.Doc.ID) {
            @Html.Raw("<div id=\"doc" + item.ID + "\" class=\"editorHeader hideHeader showHeader\" > " + item.Name + item.Type + "</div>")
        }
        else {
            @Html.Raw("<div id=\"doc" + item.ID + "\" class=\"editorHeader hideHeader\" > " + item.Name + item.Type + "</div>")
        }
    }
    @Html.HiddenFor(model => model.Doc.ID, new { id = "activeDocID" })
    <div class="btn-group">
        @Html.ActionLink("Back to project files", "Index", "Document", new { projectID = Model.Doc.ProjectID }, new { type = "button", @class = "btn btn-default" })
        <button type="button" class="btn btn-default" id="saveFileBtn">Save</button>
    </div>
</div>

<div class="editorContent" id="editorContentId">
    <div id="editorID">Editor</div>
</div>


<div id="currentUser"></div>

<script>
    var editor = ace.edit("editorID");
    var content = @Html.Raw(Json.Encode(Model.Doc.Content));
    editor.setTheme("ace/theme/twilight");
    var type = '@Model.Doc.Type';
    var highlighting = changeHighlighting(type);
    console.log(highlighting);
    editor.session.setMode("ace/mode/" + highlighting);
    editor.getSession().setValue(content);
</script>


