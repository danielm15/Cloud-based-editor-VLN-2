 @model Cloud_based_editor_VLN_2.Models.ViewModels.DocumentViewModel

@{
    ViewBag.Title = "Index";
}

<ul class="pager">
    <li class="previous"><a href="@Url.Action("Index","Project")">Back to Projects</a></li>
</ul>

<div class="listTop">
    <h2 id="projectFilesHeader">Project Files<em id="documentMsg"></em></h2>
    <div class="dropdown" id = "createFileBtn">
        <button class="btn btn-success dropdown-toggle createButton" type="button" data-toggle="dropdown">
            Create new file
        </button>

        <ul class="dropdown-menu  pull-right" id="createFileDropDown">
            <li id="createFileHeader">Create file</li>
            <li>
                @using (Html.BeginForm("Create", "Document", FormMethod.Post, new { id = "createFileForm" })) {
                    <input type="hidden" name="projectID" value="@Model.CurrProjectID">
                    <label for="fileName" class="inputLablel" id="inputFileNameText">File name<em id="duplicateErrorMsg"></em></label> <br />
                    <input type="text" name="fileName" id="fileNameInput" /> <br />
                    <label for="fileType" class="inputLablel">File type<em id="typeErrorMsg"></em></label> <br />
                    <input list="fileTypes" name="fileType" placeholder="Choose your file type" id="fileTypeInput" /> <br />
                    <datalist id="fileTypes">
                        <option value="txt" />
                        <option value="css" />
                        <option value="html" />
                        <option value="js" />
                        <option value="cs" />
                        <option value="cpp" />
                        <option value="hpp" />
                        <option value="py" />
                        <option value="java" />
                        <option value="c" />
                        <option value="php" />
                        <option value="rb" />
                        <option value="node" />
                    </datalist>
                    <input type="submit" value="Create file" id="createFileSubmitBtn" class="btn btn-success" />
                    @Html.ValidationSummary(false)
                }

            </li>
        </ul>
    </div>
</div>



<div id="documentListID">
    <ul style="list-style: none" id="documentUlListID">
        <li>
            <div class="row listHead" id="listHeader">
                <div class="col-md-3">File Name</div>
                <div class="col-md-2">Created By</div>
                <div class="col-md-3">Date Created</div>
                <div class="col-md-2">Type</div>
            </div>
        </li>
        @if (!Model.Documents.Any()) {
            <li id="noFilesListItem"><h4 class="noFiles">No files to display</h4></li>
        }
        @foreach (Cloud_based_editor_VLN_2.Models.Entities.Document item in Model.Documents) {
            <li id="@("listItem" + item.ID)">
                <div>
                    <div class="row documentListItem">
                        <a href="@Url.Action("Index", "Editor", new { projectID = item.ProjectID, documentID = item.ID })" class="clickableDiv">
                            <div class="col-md-3 listText" id="@("nameID" + item.ID)">
                                @Html.DisplayFor(modelItem => item.Name)
                            </div>
                            <div class="col-md-2 listText">
                                @Html.DisplayFor(modelItem => item.CreatedBy)
                            </div>
                            <div class="col-md-3 listText">
                                @Html.DisplayFor(modelItem => item.DateCreated)
                            </div>
                            <div class="col-md-2 listText">
                                @Html.DisplayFor(modelItem => item.Type)
                            </div>
                        </a>
                        <div class="col-md-2 right-float">
                            <div class="left right-float">
                                <a href="javascript:;" class="left dropdown-toggle" data-toggle="dropdown">
                                    <span class="glyphicon glyphicon-option-vertical optionsButton"></span>
                                </a>

                                <ul class="dropdown-menu">
                                    <li><a href="javascript:;" onclick="EditFileName(@item.ID)", class="glyphicon glyphicon-pencil"> Rename</a> </li>
                                    <li>@Html.ActionLink(" Download", "DownloadFile", new { documentID = item.ID }, new {
                                       @type = "a",
                                       @tabindex = "-1",
                                       @class = "glyphicon glyphicon-download"
                                   })</li>
                                    <li><a href="javascript:;" onclick="deleteDocument(@item.ID)", class="glyphicon glyphicon-remove"> Delete</a></li>
                                </ul>
                            </div>
                        </div>
                    </div>
                </div>
            </li>
        }    
    </ul>
</div>   

@* This will load the modal window for Rename file *@
<div class="modal" id="myModal1file">

</div>
                    @*
                <div class="col-md-4">
>>>>>>> 845a163c7b9d6fa67f780f2d07b9994663b2e584
                    @Html.DisplayFor(modelItem => item.CreatedBy)
                </div>
                <div class="col-md-2">
                    @Html.DisplayFor(modelItem => item.DateCreated)
                </div>
                <div class="col-md-1">
                    @Html.DisplayFor(modelItem => item.Type)
                </div>
                <div class="col-md-1">
                    @Html.ActionLink("Editor", "Index", "Editor", new { projectID = item.ProjectID, documentID = item.ID}, new { @type = "button", @class = "btn btn-primary editButton" })
>>>>>>> d5d2597712b9c9e05e7712cc7a7070c807aac9a1
                </div>
                <div class="col-md-1">
                    @Html.ActionLink("Download", "DownloadFile", new { documentID = item.ID }, new { @type = "button", @class = "btn btn-primary editButton" })
                </div>
            </div>
        </li>
    }
</ul>
*@
